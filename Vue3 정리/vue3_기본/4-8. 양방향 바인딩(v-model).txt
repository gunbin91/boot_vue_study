◆ 양방향 바인딩
속성 바인딩 디렉티브인 v-bind는 단방향 바인딩이다.( script -> template )
즉, 자바스크립트의 변수값이 바뀔 시 템플릿 요소에 출력된 변수값도 바뀌지만
인풋등의 벨류값이 v-bind로 바인딩 되어있어도, 스크립트의 값은 바뀌지 않는다.

▶ v-model
: v-model은 양방향 바인딩이며, 벨류값에만 자동 적용되기 때문에 v-model=""으로 사용한다.

ex)
-------------------------------------------------------------------------------------------
<template>
  <div>
    bind: <input type="text" :value="bind_text" /><br/>
    model: <input type="text" v-model="model_text"/>
    <button @click="print">button</button>
  </div>
</template>

<script>
import { ref } from 'vue';

export default {
  setup () {
    const bind_text = ref("바인드");
    const model_text = ref("모델");

    const print = ()=>{
      console.log(`bint_text = ${bind_text.value} // model_text = ${model_text.value}`)
    }
    return {bind_text, model_text, print}
  }
}
</script>
-------------------------------------------------------------------------------------------


▶ checkbox, radio, select의 v-model
- checkbox의 경우 초기값을 배열([])로 주면 배열값으로 동기화
- radio, select의 경우 value에 해당하는 값을 초기값으로 주면 된다.

** checkbox의 경우 벨류값을 변경할 수도 있다.
<input type="checkbox" v-model="checkboxYN"
    true-value="Yes"
    false-value="No"/> 
ex)
-------------------------------------------------------------------------------------------
<template>
  <div>
    a<input type="checkbox" value="1" v-model="checkValue"/> // b<input type="checkbox" value="2" v-model="checkValue"/>
    <hr/>
    a<input type="radio" name="ra" value="a" v-model="radioValue"/>
    b<input type="radio" name="ra" value="b" v-model="radioValue"/>
    c<input type="radio" name="ra" value="c" v-model="radioValue"/>

	<button @click="test">button</button>
  </div>
</template>

<script>
import { ref } from 'vue';

export default {
  setup () {
    const checkValue = ref([2]);
    const radioValue = ref('b');

    const test = ()=>{
      console.log("check  - " + checkValue.value);
      console.log("radio  - " + radioValue.value);
    }

    return {checkValue, radioValue, test}
  }
}
</script>
-------------------------------------------------------------------------------------------

▶ v-model 수식어
- v-model.lazy	:	change이벤트 이후에 동기화
- v-model.number	:	number타입으로 자동 형변환(계산식필요시)
- v-model.trim	:	앞뒤공백제거 동기화
