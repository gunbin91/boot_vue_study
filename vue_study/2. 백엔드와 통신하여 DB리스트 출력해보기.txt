1. App.vue파일 <style>태그 안에 내용을 지워주고 부트스트랩 임폴트
----------------------------------------------------------------------------------------------------------
@import 'https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css'

2. 적당한 리스트 컴포넌트를 불러와 <template>태그안에 삽입

3. 반복되는 컴포넌트에 v-for 옵션을 줄 수 있고, v-if를 이용하여 조건문을 따로 만들수도 있다.
ex)
      <li v-for="board in data.boardList" v-bind:key="board.boardSeq">
        <div>{{board.title}}</div> <div>board.contents</div>
      </li>
      <li v-if="data.boardList.length == 0">
          게시무리 없스무니다.
      </li>
----------------------------------------------------------------------------------------------------------

4. script부분에 아래내용 추가하여 데이터를 가져온다.
----------------------------------------------------------------------------------------------------------
import { reactive } from '@vue/reactivity'
import { onMounted } from 'vue';
import HelloWorld from './components/HelloWorld.vue'

export default {
  name: 'App',
  components: {
    HelloWorld
  },
  setup(){
    // 리스트에서 사용될 data
    const data = reactive({
      boardList: []
    });
    
    // ajax요청?
    const getList = () => {
      fetch(`http://localhost:9000/board`)
      .then(response => response.json())
      .then(reponse => {
        data.boardList = reponse.data;
      });
    };

    onMounted(() =>{
      getList();
    });

    return{
      data: data,
      getList: getList
    }
  }
}
----------------------------------------------------------------------------------------------------------

5. cord에러가 발생되기 때문에 요청하는 백엔드 서버에 WebMvcConfigurer를 구현하는
config클래스에 아래 메서드를 오버라이드하여 허용해준다.
----------------------------------------------------------------------------------------------------------
@Override
public void addCorsMappings(CorsRegistry registry) {
	registry.addMapping("/**").allowedOrigins("http://localhost:8080");
}
----------------------------------------------------------------------------------------------------------