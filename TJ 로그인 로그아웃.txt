▶ JWT ( Json Web Token )
: 서버 클라이언트간 통신 시 권한인가(Authorization)을 위해 사용하는 토큰

>> Spring Security - JWT 동작
1. 클라이언트: ID/PW 로그인 요청
2. 서버: ID/PW 검증 후 AccessToken + RefreshToken 발급
3. 클라이언트: API요청 시 AccessToken을 헤더에 담아 요청
* RefreshToken은 새로운 AccessToken을 발급받기 위한 토큰
* 제 인터넷 표준화 기구(IETF)에따라 RefreshToken과 AccessToken의 유효기간은 동일하게 설정

>> 만료시
1. 서버: AccessToken 만료응답
2. 클라이언트: AccessToken + RefreshToken 재발급 요청
3. 서버: 검증 후 AccessToken + RefreshToken 발급




▶ vue단
1. vue-cli와 vuex 기반의 웹 애플리케이션에 JWT(Json Web Token)을 이용하여 로그인 기능 구현
2. 로그인시 토큰 값을 쿠키(Cookies)에 저장할 것
3. 토큰 저장시 유효기간이 1분인 accessToken과 1시간인 refreshToken 이렇게 2개의 토큰을 저장할 것
3. 화면 전환, axios 요청을 할 때마다 토큰 값을 체크
  - 토큰값 체크 시 accessToken만 없을 경우 refreshToken을 이용해 토큰을 재발급해서 토큰을 새로 저장할 것
  - 이 과정에서 사용자는 중간에 끊기지 않고 자연스럽게 웹 사용이 가능하게 하기.
4. 토큰 값 두 개가 모두 없을 경우에는 로그인 페이지로 이동


▶ 토큰발급
토큰 발급은 유틸 패키지로 묶어 관리


참고
https://memostack.tistory.com/200
https://jungkimhoon.tistory.com/14

https://gksdudrb922.tistory.com/217#JwtTokenProvider

- ApiAuthController 62
- UserService 154

base64?
secret이나 유효기간을 프로퍼티파일을 통해 관리할 필요가 있어보임

토큰을 발급은 jwtTokenUtil에서 하고 있으나, 이를 통해 유저 객체를 만드는것은 서비스단에서 하고있어 해당 유저객체를 만드는것도 유틸에서 관리가 필요해보임
토큰밸리데이션체크도 try-catch를 통해 정확한 에러체크가 필요해보임
아이디/패스워드 체크 유틸객체로 펑션을 만들어서 사용하면 좋을듯?
클레임객체에 저장될 인가정보가 현재 하드코딩 USER로 되어있으니, 테이블을 만들어 관리하는것도 좋아보임
현재 헤더에 토큰값을 저장해주고 있지 않음(백엔드), 프론트에서 해주나? 안해주면 백엔드에서 해주는게 좋을듯