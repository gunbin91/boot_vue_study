◆ vue프로젝트 생성
vue프로젝트는 vue/cli 또는 vite를 사용하여 생성할 수 있다.
- cli ex) npm install -g @vue/cli

▶ Vite
: 소스 변경이 일어날 때 변경된 모듈만 교체하기 때문에 개발서버를 구동할때 매우 빠름
- npm init vue
> create vue? y
> 모듈설치 NO NO NO ...(직접설치)
> ESLint, Prettier 만 YES

- cd learn-vue3	=> 생성된 프로젝트 위치로 이동
  npm install	=> 패키지에 정의된 모듈 설치
  npm run lint
  npm run dev	=> 개발서버실행

◆ vue프로젝트 구성 살펴보기

▶ vite.config.js
: 비트로 생성된 뷰프로젝트 설정파일
alias: {
    '@': fileURLToPath(new URL('./src', import.meta.url))
}
=> 위 코드는 프로젝트 내에서 @를 ./src 경로로 사용하겠다는 의미
즉, src아래 컴포넌트 등을 import할때 유용하게 쓰일 수 있다.

▶ package.json
"scripts": {
    "dev": "vite",
    "build": "vite build"
  }
=> npm run dev == npm run vite 등으로 치환해서 명령어를 사용할 수 있도록함

"dependencies"는 모듈 의존성 기재

▶ node_modules 디렉터리
: package.json파일에 기재한 dependencies 모듈들을 실제 다운받는 폴더

▶ public
: 정적인 요소를 저장해 놓는 폴더

▶ src/assets
: 웹팩에 영향을 받는 이미지,css 등의 정적 자산

▶ App.vue
: 루트 컴포넌트

** 프로젝트 기본 동작 순서
1. index.html 을 찾아서 보여준다.
=> index.html에서 main.js모듈을 불러옴
( <script type="module" src="/src/main.js"></script> )

2. main.js 뷰앱을 생성시키고, 해당 앱에 App.vue를 적재시킴
( import { createApp } from 'vue' 
createApp(App).mount('#app') )
=> index.html파일 <div id="app"></div>영역에 마운트 된다!

3. 즉, 맨처음 보여지는 페이지는 app.vue를 컴포넌트로 적재시킨 
main.js모듈을 임폴트하는 index.html파일이다!

◆ eslint
: EsLint를 설치하게 되면, .eslintrc.cjs파일이 만들어지게 된다.
해당 파일에서 vs코드의 경고나, 에러메시지 출력될 수 있도록 해준다.
ex) 
rules: {
    'no-console': 'error'
}
=> 위와 같은 옵션을 추가하게 되면, 코드에서 console.log작성 시 빨간줄이 생기며
에러가 표시된다( 하지만 기능상에 문제는 없음 )

▶ eslint 밸리데이션 체크
: ctrl+, (설정파일)을 열어 eslint검색 후 eslint validate - settings.json편집
아래 사항들 추가
---------------------------------------------------------------------------------
"eslint.validate": [        
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    // "html",  // 삭제
    "vue",
    "markdown"
],
"editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
},
"editor.tabSize": 2,	// 탭사이즈 두칸
---------------------------------------------------------------------------------
=> 적용될 파일형식을 지정하고, onsave등으로 저장시 자동으로 eslint사항(정렬등)이 적용되도록 설정할 수 있다.
( 해당 내용 적용시 설정 format on save 옵션을 꺼주어야 함, 프리터 패키지사용X )

=> 코드내 에러또는 주의 코드를 복사하여 :"off"옵션을 주게 되면 해당 에러는 표시되지 않도록 할 수 있다.

▶ 명령어로 eslint검사 실행
: package.json 파일에 스크립트를 추가하여 전체 파일 eslint검사를 시행할 수도 있다.
ex) 
"scripts":{
    "lint": "eslint . --ext .vue,.js,.jsx,.cjs,.mjs --fix --ignore-path .gitignore"
}
=> npm run lint

◆ Vue 스타일 가이드
: 필수사항은 아니나 권장 규칙을 제시

- 컴포넌트 이름에 합성어(한 단어X) 사용 ex) todo [X] => todo-item [O]
ex) export default{ name: 'TodoItem', ... }
app.component('todo-item', {...})

- props정의 시 객체로 상세하게 정의
ex) props: { "status" } [X] => props: { status: {type: String, required: ture, ....} } [O]