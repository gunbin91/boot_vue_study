▶ for of
: ES6에서 추가된 배열 순회 방법
- 기존 forEach, for in

var data = [1, 2, undefined, NaN, null];
Array.prototype.getIndex = "err";

// 1. 기존 forEach
data.forEach(function(value){
    console.log("value: ", value);	=>	정상출력
});
    
// 2. 기존 for in: 해당 객체의 상위객체 값도 출력될 수 있는 문제가 발생할 수 있기 때문에 배열에서 사용하지 않는것이 좋다.
for(let idx in data){
    console.log(data[idx]);	=> err 추가 출력
}

// 3. for of: 위 for in의 문제점을 해결하기 위해 for of가 새로 추가됨, 단 for in과 달리 인덱스 값이 아닌 value값이 출력됨
for(let value of data){
    console.log(value);
}
    
let str = "hello world!!";
for(let value of str){
    console.log(value);
}
// 스트링 배열 또한 사용 가능!

▶ spread operator(펼침연산자), ...변수
: 해당 배열의 값을 그대로 펼쳐주는 연산자

let pre = ["apple", "orange", 100];
let newData = [...pre];		=>	...pre가 "apple", "orange", "100"의 문자 그대로 변환이 되었다고 보면 됨!
console.log(newData);		=>	pre와 같은 리스트 출력
console.log(pre === newData);	=>	false 단순히 펼쳐서 새로운 배열을 만들었기 때문에 같은 배열이 아님
console.log(...pre);			=>	apple, orange, 100

* 활용
- 값을 그대로 펼쳐주는 것이기 때문에 다른 배열에 그대로 값을 넣는것도 가능
ex) let newData = [0, 1, 2, ...pre, 3, 4]	=> 0 1 2 apple orange ...
- 메서드 파라미터로 넘겨주는 것도 가능
ex) 
function sum(a, b, c){
	return a+b+c;
}
let pre = [100, 200, 300];
sum(...pre);

▶ from 통해 진짜 배열 만들기
: 자바 스크립트의 경우 인자없는 메서드에서 가변적으로 파라미터를 넘겨줄 수 있다.
이때, arguments라는 키워드를 통해 배열형태(배열이아님!)로 파라미터를 가져올 수 있다.
=> 이런식으로 자바스크립트에는 배열아닌 배열형태의 여러 값들이 있다.
ex)
function addMark(){
    for(let i of arguments){
        console.log(i);
    }
}
addMark(1,2,3);

단, arguments키워드를 통해 가져온 값은 배열이 아니기 때문에 배열과 같은 방식의 메서드 사용은 불가하다.
이때 진짜 배열로 바꿔주기 위한 메서드가 from이다.
ex)
function addMark(){
    let newArray = Array.from(arguments);
    let newData = newArray.map(function(value){
	return value + "!";
    });
    console.log(newData);
}
=> map메서드는 배열에서만 사용 가능하기 때문에 arguments는 사용이 불가하지만
from을 통해 배열로 변환된 값은 사용이 가능하다( forEach도 배열만 가능 )

▶ map?	=> filter(), find(), reduce()도 별도로 찾아보는것도 좋다.
: map은 보통 전체 배열의 값을 바꿔줄 때 사용된다.
for문을 사용하여 바꿀 수 있지만 더 간편하게 바꿀 수 있음
ex)
let arr = [2, 3, 5, 7]

let newArr = arr.map(function(element){
    return element + "zz";
});
=> newArr은 2zz, 3zz, 5zz, 7zz

* map의 완전한 function
let arr = [2, 3, 5, 7]

let newArr = arr.map(function(element, index, array){
    console.log(element);	=>	해당 인덱스의 객체값
    console.log(index);	=>	인덱스값
    console.log(array);	=>	전체배열값
    return element + "zz";
}, 80);
    
console.log(newArr);


◆keyword
for of, spread operator(...), from, arguments, map