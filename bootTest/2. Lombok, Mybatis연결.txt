1. Lombok.jar 파일 다운로드
2. 이클립스 ini파일을 열어 아래 구문추가
- javaagent:lombok.jar
3. 이클립스재시작

4. 데이터 추가
: 하위 mvc.domain패키지를 만들어 Board클래스를 추가하여 아래와 같이 작성
(@Data어노테이션의 import가 lombok.Data로 사용된다면 제대로 설정된것)	=>	xml쿼리에서 사용될 변수명이된다. 일치해야함 db와 타입도 맞아야함
---------------------------------------------------------------------
package com.example.demo.mvc.domain;

import lombok.Data;

@Data
public class Board {
	private int boardSeq;
	private String title;
	private String contents;
	private Date regData;
}
----------------------------------------------------------------------

5. 레포지토리 추가
: 하위 mvc.repository 패키지를 만들어 BoardRepository 인터페이스 추가
----------------------------------------------------------------------
package com.example.demo.mvc.repository;

@Mapper 또는 @Repository
public interface BoardRepository {
	List<Board> getList();
	Board get(int boardSeq);
	void save(Board board);
	void delete(int boardSeq);
}
----------------------------------------------------------------------

6. 서비스 추가
: 하위 mvc.service 패키지를 만들어 BoardService 클래스 추가
----------------------------------------------------------------------
package com.example.demo.mvc.service;

@Service
public class BoardService {
	@Autowired
	private BoardRepository repository;
	
	public List<Board> getList(){
		return repository.getList();
	}
	
	public Board get(int boardSeq) {
		return repository.get(boardSeq);
	}
	
	public int save(Board parameter) {
		Board board = repository.get(parameter.getBoardSeq());
		if(board == null) {
			repository.save(parameter);
		}
		return parameter.getBoardSeq();
	}
	
	public void delete(int boardSeq) {
		repository.delete(boardSeq);
	}
}

----------------------------------------------------------------------

7. 하위 mvc.controller패키지에 컨트롤러 추가
----------------------------------------------------------------------
package com.example.demo.mvc.Controller;

@RestController
@RequestMapping("/board")
public class BoardController {
	@Autowired
	private BoardService boardService;
	
	@GetMapping
	public List<Board> getList(){
		return boardService.getList();
	}
	
	@GetMapping("/{boardSeq}")
	public Board get(@PathVariable int boardSeq) {
		return boardService.get(boardSeq);
	}
	
	@GetMapping("/save")
	public int save(Board parameter) {
		return boardService.save(parameter);
	}
	
	@GetMapping("/delete/{boardSeq}")
	public void delete(@PathVariable int boardSeq) {
		boardService.delete(boardSeq);
	}
}
----------------------------------------------------------------------

8. 마이바티스추가
- resources/ 하위 mybatis폴더를 만들어 Board.xml파일추가
----------------------------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.example.demo.mvc.repository.BoardRepository">
	<select id="getList" parameterType="com.example.demo.mvc.domain.Board" resultType="com.example.demo.mvc.domain.Board">
		SELECT
			B.BOARD_SEQ,
			B.TITLE,
			B.CONTENTS,
			B.REG_DATE
		FROM T_BOARD B
		<!-- WHERE B.BOARD_SEQ = #{boardSeq} -->
	</select>
	
	<select id="get" parameterType="com.example.demo.mvc.domain.Board" resultType="com.example.demo.mvc.domain.Board">
		SELECT
			B.BOARD_SEQ,
			B.TITLE,
			B.CONTENTS,
			B.REG_DATE
		FROM T_BOARD B
		WHERE B.BOARD_SEQ = #{boardSeq}
	</select>
	
	<insert id="save" parameterType="com.example.demo.mvc.domain.Board">
		INSERT INTO T_BOARD 
		VALUES(#{boardSeq}, #{title}, #{contents}, #{regData})
	</insert>
	
	<delete id="delete" parameterType="com.example.demo.mvc.domain.Board">
		DELETE FROM T_BOARD
		WHERE BOARD_SEQ = #{boardSeq}
	</delete>
</mapper>
----------------------------------------------------------------------

9. 마이바티스 configuration추가
: DataBaseConfiguration과 같은 configuration패키지에 MybatisConfiguration.java 추가
----------------------------------------------------------------------
package com.example.demo.configuration;

@Configuration
@MapperScan(basePackages = "com.example.demo.mvc.repository")
public class MybatisConfiguration {
	@Bean
	public SqlSessionFactory sqlSessionFactory(@Autowired(required = true) DataSource datacource) throws Exception{
		SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();
		factoryBean.setDataSource(datacource);
		factoryBean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources("classpath:mybatis/sql/*.xml"));
		SqlSessionFactory factory = factoryBean.getObject();
		factory.getConfiguration().setMapUnderscoreToCamelCase(true);
		return factoryBean.getObject();
	}
	
	@Bean
	public SqlSessionTemplate sqlSessionTemplate(@Autowired SqlSessionFactory sqlSessionFactory) {
		return new SqlSessionTemplate(sqlSessionFactory);
	}
}

----------------------------------------------------------------------


>> 사전세팅(마리아디비)
CREATE TABLE T_BOARD(
	BOARD_SEQ INT,
	TITLE VARCHAR(30),
	CONTENTS VARCHAR(30),
	REG_DATE DATE
)DEFAULT CHARSET=utf8 

INSERT INTO T_BOARD VALUES(1, '보드테스트', '안녕하세요보드입니다.', NOW());

select * from T_BOARD